# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Fri Apr 1 21:34:01 2022
# Designs open: 1
#   Sim: /afs/umich.edu/user/z/t/ztguan/group6w22/simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: pipeline_dp_tb
#   Wave.1: 36 signals
#   Group count = 2
#   Group FL_inst signal count = 28
#   Group VFL_inst signal count = 8
# End_DVE_Session_Save_Info

# DVE version: R-2020.12-SP2-1_Full64
# DVE build date: Jul 18 2021 21:21:42


#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">

gui_set_loading_session_type Restart
gui_continuetime_set
gui_clear_window -type Wave
gui_clear_window -type List

# Application preferences
gui_set_pref_value -key app_default_font -value {Helvetica,10,-1,5,50,0,0,0,0,0}
gui_src_preferences -tabstop 8 -maxbits 24 -windownumber 1
#<WindowLayout>

# DVE top-level session


# Create and position top-level window: TopLevel.1

set TopLevel.1 TopLevel.1

# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set Stack.1 Stack.1
set Class.1 Class.1
set Object.1 Object.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Local.1 Local.1
set Member.1 Member.1
set Console.1 Console.1
gui_sync_global -id ${TopLevel.1} -option true

# MDI window settings
set Source.1 Source.1
gui_update_layout -id ${Source.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false}}

# End MDI window settings


# Create and position top-level window: TopLevel.2

set TopLevel.2 TopLevel.2

# Docked window settings
gui_sync_global -id ${TopLevel.2} -option true

# MDI window settings
set Wave.1 Wave.1
gui_update_layout -id ${Wave.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false} {child_wave_left 444} {child_wave_right 1083} {child_wave_colname 220} {child_wave_colvalue 220} {child_wave_col1 0} {child_wave_col2 1}}

# End MDI window settings


#</WindowLayout>

#<Database>

gui_set_precision 1s
gui_set_time_units 1s
#</Database>

# DVE Global setting session: 


# Global: Breakpoints

# Global: Bus

# Global: Expressions

# Global: Signal Time Shift

# Global: Signal Compare

# Global: Signal Groups
gui_load_child_values {pipeline_dp_tb.dut.FL_inst}
gui_load_child_values {pipeline_dp_tb.dut.VFL_inst}


set _session_group_1 FL_inst
gui_sg_create "$_session_group_1"
set FL_inst "$_session_group_1"

gui_sg_addsignal -group "$_session_group_1" { pipeline_dp_tb.dut.FL_inst.fl_entry pipeline_dp_tb.dut.FL_inst.fl_dp_o pipeline_dp_tb.dut.FL_inst.C_TAG_IDX_WIDTH pipeline_dp_tb.dut.FL_inst.C_PHY_REG_NUM pipeline_dp_tb.dut.FL_inst.vfl_fl_i pipeline_dp_tb.dut.FL_inst.head pipeline_dp_tb.dut.FL_inst.rt_num pipeline_dp_tb.dut.FL_inst.head_rollover pipeline_dp_tb.dut.FL_inst.rollback_i pipeline_dp_tb.dut.FL_inst.rob_fl_i pipeline_dp_tb.dut.FL_inst.dp_fl_i pipeline_dp_tb.dut.FL_inst.rt_route pipeline_dp_tb.dut.FL_inst.C_FL_ENTRY_NUM pipeline_dp_tb.dut.FL_inst.tail_rollover pipeline_dp_tb.dut.FL_inst.next_head pipeline_dp_tb.dut.FL_inst.tail pipeline_dp_tb.dut.FL_inst.rst_i pipeline_dp_tb.dut.FL_inst.avail_num pipeline_dp_tb.dut.FL_inst.C_RT_NUM pipeline_dp_tb.dut.FL_inst.C_ARCH_REG_NUM pipeline_dp_tb.dut.FL_inst.C_FL_NUM_WIDTH pipeline_dp_tb.dut.FL_inst.C_RT_NUM_WIDTH pipeline_dp_tb.dut.FL_inst.C_DP_NUM {pipeline_dp_tb.dut.FL_inst.$unit} pipeline_dp_tb.dut.FL_inst.C_FL_IDX_WIDTH pipeline_dp_tb.dut.FL_inst.next_fl_entry pipeline_dp_tb.dut.FL_inst.next_tail pipeline_dp_tb.dut.FL_inst.clk_i }
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_TAG_IDX_WIDTH}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_TAG_IDX_WIDTH}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_PHY_REG_NUM}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_PHY_REG_NUM}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_FL_ENTRY_NUM}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_FL_ENTRY_NUM}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_RT_NUM}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_RT_NUM}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_ARCH_REG_NUM}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_ARCH_REG_NUM}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_FL_NUM_WIDTH}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_FL_NUM_WIDTH}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_RT_NUM_WIDTH}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_RT_NUM_WIDTH}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_DP_NUM}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_DP_NUM}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_FL_IDX_WIDTH}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.FL_inst.C_FL_IDX_WIDTH}

set _session_group_2 VFL_inst
gui_sg_create "$_session_group_2"
set VFL_inst "$_session_group_2"

gui_sg_addsignal -group "$_session_group_2" { pipeline_dp_tb.dut.VFL_inst.vfl_entry pipeline_dp_tb.dut.VFL_inst.vfl_fl_o pipeline_dp_tb.dut.VFL_inst.C_FL_ENTRY_NUM pipeline_dp_tb.dut.VFL_inst.rst_i pipeline_dp_tb.dut.VFL_inst.C_RT_NUM {pipeline_dp_tb.dut.VFL_inst.$unit} pipeline_dp_tb.dut.VFL_inst.rob_vfl_i pipeline_dp_tb.dut.VFL_inst.clk_i }
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.VFL_inst.C_FL_ENTRY_NUM}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.VFL_inst.C_FL_ENTRY_NUM}
gui_set_radix -radix {decimal} -signals {Sim:pipeline_dp_tb.dut.VFL_inst.C_RT_NUM}
gui_set_radix -radix {twosComplement} -signals {Sim:pipeline_dp_tb.dut.VFL_inst.C_RT_NUM}

# Global: Highlighting

# Global: Stack
gui_change_stack_mode -mode list

# Post database loading setting...

# Save global setting...

# Wave/List view global setting
gui_cov_show_value -switch false

# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {
    if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {
        gui_close_window -window $__top
    }
}
gui_set_loading_session_type noSession
# DVE View/pane content session: 


# Hier 'Hier.1'
gui_show_window -window ${Hier.1}
gui_list_set_filter -id ${Hier.1} -list { {Package 1} {All 0} {Process 1} {VirtPowSwitch 0} {UnnamedProcess 1} {UDP 0} {Function 1} {Block 1} {SrsnAndSpaCell 0} {OVA Unit 1} {LeafScCell 1} {LeafVlgCell 1} {Interface 1} {LeafVhdCell 1} {$unit 1} {NamedBlock 1} {Task 1} {VlgPackage 1} {ClassDef 1} {VirtIsoCell 0} }
gui_list_set_filter -id ${Hier.1} -text {*}
gui_change_design -id ${Hier.1} -design Sim
catch {gui_list_expand -id ${Hier.1} pipeline_dp_tb}
catch {gui_list_expand -id ${Hier.1} pipeline_dp_tb.dut}
catch {gui_list_select -id ${Hier.1} {pipeline_dp_tb.dut.VFL_inst}}
gui_view_scroll -id ${Hier.1} -vertical -set 14
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Class 'Class.1'
gui_list_set_filter -id ${Class.1} -list { {OVM 1} {VMM 1} {All 1} {Object 1} {UVM 1} {RVM 1} }
gui_list_set_filter -id ${Class.1} -text {*}
gui_change_design -id ${Class.1} -design Sim

# Member 'Member.1'
gui_list_set_filter -id ${Member.1} -list { {InternalMember 0} {RandMember 1} {All 0} {BaseMember 0} {PrivateMember 1} {LibBaseMember 0} {AutomaticMember 1} {VirtualMember 1} {PublicMember 1} {ProtectedMember 1} {OverRiddenMember 0} {InterfaceClassMember 1} {StaticMember 1} }
gui_list_set_filter -id ${Member.1} -text {*}

# Data 'Data.1'
gui_list_set_filter -id ${Data.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {LowPower 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Data.1} -text {*}
gui_list_show_data -id ${Data.1} {pipeline_dp_tb.dut.VFL_inst}
gui_view_scroll -id ${Data.1} -vertical -set 0
gui_view_scroll -id ${Data.1} -horizontal -set 0
gui_view_scroll -id ${Hier.1} -vertical -set 14
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Source 'Source.1'
gui_src_value_annotate -id ${Source.1} -switch false
gui_set_env TOGGLE::VALUEANNOTATE 0
gui_open_source -id ${Source.1}  -replace -active pipeline_dp_tb /afs/umich.edu/user/z/t/ztguan/group6w22/testbench/pipeline_dp_tb.sv
gui_src_value_annotate -id ${Source.1} -switch true
gui_set_env TOGGLE::VALUEANNOTATE 1
gui_view_scroll -id ${Source.1} -vertical -set 3705
gui_src_set_reusable -id ${Source.1}
# Warning: Class view not found.

# View 'Wave.1'
gui_wv_sync -id ${Wave.1} -switch false
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
gui_set_pref_value -category Wave -key exclusiveSG -value {false}
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
gui_list_set_height -id Wave -height 25
set origGroupCreationState [gui_list_create_group_when_add -wave]
gui_list_create_group_when_add -wave -disable
gui_wv_zoom_timerange -id ${Wave.1} 4799 5153
gui_list_add_group -id ${Wave.1} -after {New Group} {FL_inst}
gui_list_add_group -id ${Wave.1} -after {New Group} {VFL_inst}
gui_list_collapse -id ${Wave.1} FL_inst
gui_seek_criteria -id ${Wave.1} {Any Edge}



gui_set_env TOGGLE::DEFAULT_WAVE_WINDOW ${Wave.1}
gui_set_pref_value -category Wave -key exclusiveSG -value $groupExD
gui_list_set_height -id Wave -height $origWaveHeight
if {$origGroupCreationState} {
	gui_list_create_group_when_add -wave -enable
}
if { $groupExD } {
 gui_msg_report -code DVWW028
}
gui_list_set_filter -id ${Wave.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Wave.1} -text {*}
gui_list_set_insertion_bar  -id ${Wave.1} -group VFL_inst  -position in

gui_view_scroll -id ${Wave.1} -vertical -set 0
gui_show_grid -id ${Wave.1} -enable false
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.1}]} {
	gui_set_active_window -window ${TopLevel.1}
	gui_set_active_window -window ${Source.1}
	gui_set_active_window -window ${HSPane.1}
}
if {[gui_exist_window -window ${TopLevel.2}]} {
	gui_set_active_window -window ${TopLevel.2}
	gui_set_active_window -window ${Wave.1}
}
#</Session>

